# # 用于处理 HTTP 请求并重定向到 HTTPS 的 server 块
# server {
#   listen 80;
#   server_name https://sg-play.mobilelegends.com;  # 监听域名

#   # 将所有 HTTP 请求重定向到 HTTPS
#   location /events/mlbbxwhatsapp {
#     return 301 https://$host$request_uri;
#   }
# }

server{
  set $proxy_path /etc/nginx;
  listen       80; # ssl http2
  server_name  play.mc-gogo.com; # localhost; # play.mc-gogo.com # sg-play.mobilelegends.com

  # ssl_certificate /etc/nginx/ssl/server.crt;  # 指向你的证书文件
  # ssl_certificate_key /etc/nginx/ssl/server.key;  # 指向你的私钥文件

  # ssl_protocols TLSv1.2 TLSv1.3;  # 启用 TLS 1.2 和 1.3
  # ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  # ssl_prefer_server_ciphers on;
  # ssl_session_cache shared:SSL:10m;

  # Add HSTS header
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  root   /etc/nginx/html;
  index  index.html index.htm;

  # access_log  /var/log/nginx/host.access.log  main;

  gzip on;
  gzip_types text/plain text/css application/javascript;
  gzip_min_length 1024;
  gzip_vary on;
  underscores_in_headers on;
  client_body_temp_path $proxy_path;
  client_max_body_size 20M;
  
  location /r {
    # add_header X-Config ipa;
    proxy_pass https://api.mobilelegends.com; # ip后台服务运行地址
    proxy_set_header X-Real-IP $remote_addr;

    add_header Access-Control-Allow-Origin '*';
    add_header X-Real-IP $remote_addr;

    # add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
    proxy_buffer_size 1024k;
    proxy_buffers 16 1024k;
    proxy_busy_buffers_size 2048k;
    proxy_temp_file_write_size 2048k;
  }
  location /events/mcgg2025wa/activity {
    # add_header X-Config ipa;
    proxy_pass https://api.mc-gogo.com/events/mcgg2025wa/activity; # ip后台服务运行地址
    proxy_set_header X-Real-IP $remote_addr;

    add_header Access-Control-Allow-Origin '*';
    add_header X-Real-IP $remote_addr;

    # add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
    proxy_buffer_size 1024k;
    proxy_buffers 16 1024k;
    proxy_busy_buffers_size 2048k;
    proxy_temp_file_write_size 2048k;
  }

  # 邀请的资源文件
  location /events/mcgg2025wa/invitate.js {
    # root html;
    alias $proxy_path/html/mcgg2025wa/promotions/invitate.js;
    # index invitation.html invitation.htm;
    try_files $uri $uri.js =404;

    # 使用try_files指令重定向所有非文件/目录请求到index.html，解决单页应用服务端路由的问题
    # 注意这里的路径是相对于alias指定的路径
    #try_files $uri $uri.html $uri.js =404;
    # try_files $uri $uri/invitation.js $uri/invitation.html /invitation.html;

    proxy_set_header X-Real-IP $remote_addr;
    add_header Cache-Control "no-store";
    add_header X-Real-IP $remote_addr;
    # gzip on;

    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    
    expires off; # 确保 Nginx 不会添加过期头来指示浏览器缓存内容。
    etag off; # 禁用 ETag，因为 ETag 可能会导致浏览器认为内容没有变化，从而使用缓存版本。
  }

  # 新的邀请连接
  location /events/mcgg2025wa/invite {
    # root html;
    alias $proxy_path/html/mcgg2025wa/promotions/;
    # index invitation.html invitation.htm;

    # 使用try_files指令重定向所有非文件/目录请求到index.html，解决单页应用服务端路由的问题
    # 注意这里的路径是相对于alias指定的路径
    try_files $uri $uri.html $uri.js =404;

    proxy_set_header X-Real-IP $remote_addr;
    add_header Cache-Control "no-store";
    add_header X-Real-IP $remote_addr;
    # gzip on;

    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    
    expires off; # 确保 Nginx 不会添加过期头来指示浏览器缓存内容。
    etag off; # 禁用 ETag，因为 ETag 可能会导致浏览器认为内容没有变化，从而使用缓存版本。
  }
  # 唤醒好友列表
  location /events/mcgg2025wa/message {
    # root html;
    alias $proxy_path/html/mcgg2025wa/promotions/;
    
    # 注意这里的路径是相对于alias指定的路径
    try_files $uri $uri/message.html /message.html;

    proxy_set_header X-Real-IP $remote_addr;
    add_header Cache-Control "no-store";
    add_header X-Real-IP $remote_addr;

    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    
    expires off; # 确保 Nginx 不会添加过期头来指示浏览器缓存内容。
    etag off; # 禁用 ETag，因为 ETag 可能会导致浏览器认为内容没有变化，从而使用缓存版本。
  }

  location /events/mcgg2025wa/myBundleCode {
    alias $proxy_path/html/mcgg2025wa/myBundleCode/;
    add_header Access-Control-Allow-Origin '*';
    add_header X-Real-IP $remote_addr;
    add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization'; 
    expires 30d; # 强制缓存：30天
    add_header Cache-Control "public, max-age=2592000"; # 30天的秒数
    gzip on;
  }
  location /events/mcgg2025wa/promotion {
    # root html;
    alias $proxy_path/html/mcgg2025wa/;
    index index.html index.htm;

    # 使用try_files指令重定向所有非文件/目录请求到index.html，解决单页应用服务端路由的问题
    # 注意这里的路径是相对于alias指定的路径
    try_files $uri $uri/ /mcgg2025wa/index.html;

    proxy_set_header X-Real-IP $remote_addr;
    add_header Cache-Control "no-store";
    add_header X-Real-IP $remote_addr;
    # gzip on;

    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    
    expires off; # 确保 Nginx 不会添加过期头来指示浏览器缓存内容。
    etag off; # 禁用 ETag，因为 ETag 可能会导致浏览器认为内容没有变化，从而使用缓存版本。
  }
}